// This file is generated by Ubpa::USRefl::AutoRefl

#pragma once

#include <USRefl/USRefl.h>

template<>
struct Ubpa::USRefl::TypeInfo<Ubpa::UECS::EntityMngr> :
    TypeInfoBase<Ubpa::UECS::EntityMngr>
{
#ifdef UBPA_USREFL_NOT_USE_NAMEOF
    static constexpr char name[23] = "Ubpa::UECS::EntityMngr";
#endif
    static constexpr AttrList attrs = {};
    static constexpr FieldList fields = {
        Field {TSTR(UMeta::constructor), WrapConstructor<Type()>()},
        Field {TSTR(UMeta::constructor), WrapConstructor<Type(const UECS::EntityMngr&)>()},
        Field {TSTR(UMeta::constructor), WrapConstructor<Type(UECS::EntityMngr&&)>()},
        Field {TSTR(UMeta::destructor), WrapDestructor<Type>()},
        Field {TSTR("cmptTraits"), &Type::cmptTraits},
        Field {TSTR("Create"), static_cast<UECS::Entity(Type::*)(Span<const UECS::CmptType>)>(&Type::Create)},
        Field {TSTR("Create"), static_cast<UECS::Entity(Type::*)(UECS::CmptType)>(&Type::Create)},
        Field {TSTR("Instantiate"), &Type::Instantiate},
        Field {TSTR("Attach"), static_cast<void(Type::*)(UECS::Entity, Span<const UECS::CmptType>)>(&Type::Attach)},
        Field {TSTR("Attach"), static_cast<void(Type::*)(UECS::Entity, UECS::CmptType)>(&Type::Attach)},
        Field {TSTR("Detach"), static_cast<void(Type::*)(UECS::Entity, Span<const UECS::CmptType>)>(&Type::Detach)},
        Field {TSTR("Detach"), static_cast<void(Type::*)(UECS::Entity, UECS::CmptType)>(&Type::Detach)},
        Field {TSTR("Have"), static_cast<bool(Type::*)(UECS::Entity, UECS::CmptType)const>(&Type::Have)},
        Field {TSTR("Get"), static_cast<UECS::CmptPtr(Type::*)(UECS::Entity, UECS::CmptType)const>(&Type::Get)},
        Field {TSTR("Components"), &Type::Components},
        Field {TSTR("Exist"), &Type::Exist},
        Field {TSTR("Destroy"), &Type::Destroy},
        Field {TSTR("TotalEntityNum"), &Type::TotalEntityNum},
        Field {TSTR("EntityNum"), &Type::EntityNum},
        Field {TSTR("GetEntityFreeEntries"), &Type::GetEntityFreeEntries},
        Field {TSTR("GetEntityVersion"), &Type::GetEntityVersion},
        Field {TSTR("IsSingleton"), &Type::IsSingleton},
        Field {TSTR("GetSingletonEntity"), &Type::GetSingletonEntity},
        Field {TSTR("GetSingleton"), static_cast<UECS::CmptPtr(Type::*)(UECS::CmptType)const>(&Type::GetSingleton)},
        Field {TSTR("GetCmptArray"), static_cast<std::vector<UECS::CmptPtr>(Type::*)(const UECS::ArchetypeFilter&, UECS::CmptType)const>(&Type::GetCmptArray)},
        Field {TSTR("GetEntityArray"), &Type::GetEntityArray},
        Field {TSTR("Accept"), &Type::Accept},
    };
};

